Changes to libelf-0.8.13 as of 2013-07-09 by Cypress Semiconductor:
 * Ignore invalid offset in section header when the section type is
   SHT_NOBITS.
 * Added a few missing functions to the .def file so they will be
   exported in the Windows DLL build.
 * Added a command to embed the manifest in the Windows DLL.
 * Added the DEBUG variable to Makefile.w32 to select whether DEBUG
   or RELEASE command line arguments will be used.
 * Use a different name for the DEBUG version of the Windows DLL.
 * Add CFLAGS to LINK_SHLIB
 * Implement ftruncate for WIN32

diff -urN libelf-0.8.13.orig/aclocal.m4 libelf-0.8.13/aclocal.m4
--- libelf-0.8.13.orig/aclocal.m4	2008-05-23 01:17:56.000000000 -0700
+++ libelf-0.8.13/aclocal.m4	2016-04-28 11:38:20.920203200 -0700
@@ -246,7 +246,7 @@
 	    fi
 	    SHLINK_SFX='.so'
 	    SONAME_SFX='.so.$(MAJOR)'
-	    LINK_SHLIB='$(CC) -shared -Wl,-soname,$(SONAME)'
+	    LINK_SHLIB='$(CC) $(CFLAGS) -shared -Wl,-soname,$(SONAME)'
 	    INSTALL_SHLIB='$(INSTALL_PROGRAM)'
 	    DEPSHLIBS='-lc'
 	  else
diff -urN libelf-0.8.13.orig/lib/getdata.c libelf-0.8.13/lib/getdata.c
--- libelf-0.8.13.orig/lib/getdata.c	2008-05-23 01:15:34.000000000 -0700
+++ libelf-0.8.13/lib/getdata.c	2016-04-28 11:38:20.924203700 -0700
@@ -136,13 +136,13 @@
 	    /* already cooked */
 	    return &sd->sd_data;
 	}
-	else if (scn->s_offset < 0 || scn->s_offset > elf->e_size) {
-	    seterr(ERROR_OUTSIDE);
-	}
 	else if (scn->s_type == SHT_NOBITS || !scn->s_size) {
 	    /* no data to read */
 	    return &sd->sd_data;
 	}
+	else if (scn->s_offset < 0 || scn->s_offset > elf->e_size) {
+	    seterr(ERROR_OUTSIDE);
+	}
 	else if (scn->s_offset + scn->s_size > elf->e_size) {
 	    seterr(ERROR_TRUNC_SCN);
 	}
diff -urN libelf-0.8.13.orig/lib/libelf.def libelf-0.8.13/lib/libelf.def
--- libelf-0.8.13.orig/lib/libelf.def	2006-07-11 09:53:04.000000000 -0700
+++ libelf-0.8.13/lib/libelf.def	2016-04-28 11:38:21.396763700 -0700
@@ -80,3 +80,6 @@
 	elf_getshnum
 	elf_getshstrndx
 	elfx_update_shstrndx
+	elf_getphdrnum
+	elf_getshdrnum
+	elf_getshdrstrndx
diff -urN libelf-0.8.13.orig/lib/libelf-debug.def libelf-0.8.13/lib/libelf-debug.def
--- libelf-0.8.13.orig/lib/libelf-debug.def	1969-12-31 16:00:00.000000000 -0800
+++ libelf-0.8.13/lib/libelf-debug.def	2016-04-28 11:38:20.926204000 -0700
@@ -0,0 +1,85 @@
+LIBRARY libelf-debug
+VERSION 0.8
+EXPORTS
+	elf_begin
+	elf_cntl
+	elf_delscn
+	elf_end
+	elf_errmsg
+	elf_errno
+	elf_fill
+	elf_flagdata
+	elf_flagehdr
+	elf_flagelf
+	elf_flagphdr
+	elf_flagscn
+	elf_flagshdr
+	elf_getarhdr
+	elf_getarsym
+	elf_getbase
+	elf_getdata
+	elf_getident
+	elf_getscn
+	elf_hash
+	elf_kind
+	elf_memory
+	elf_ndxscn
+	elf_newdata
+	elf_newscn
+	elf_next
+	elf_nextscn
+	elf_rand
+	elf_rawdata
+	elf_rawfile
+	elf_strptr
+	elf_update
+	elf_version
+	elf32_checksum
+	elf32_fsize
+	elf32_getehdr
+	elf32_getphdr
+	elf32_getshdr
+	elf32_newehdr
+	elf32_newphdr
+	elf32_xlatetof
+	elf32_xlatetom
+	elf64_checksum
+	elf64_fsize
+	elf64_getehdr
+	elf64_getphdr
+	elf64_getshdr
+	elf64_newehdr
+	elf64_newphdr
+	elf64_xlatetof
+	elf64_xlatetom
+	elfx_movscn
+	elfx_remscn
+	gelf_checksum
+	gelf_fsize
+	gelf_getclass
+	gelf_getdyn
+	gelf_getehdr
+	gelf_getphdr
+	gelf_getrel
+	gelf_getrela
+	gelf_getshdr
+	gelf_getsym
+	gelf_msize
+	gelf_newehdr
+	gelf_newphdr
+	gelf_update_dyn
+	gelf_update_ehdr
+	gelf_update_phdr
+	gelf_update_rel
+	gelf_update_rela
+	gelf_update_shdr
+	gelf_update_sym
+	gelf_xlatetof
+	gelf_xlatetom
+	elf_getphnum
+	elf_getshnum
+	elf_getshstrndx
+	elfx_update_shstrndx
+	elf_getphdrnum
+	elf_getshdrnum
+	elf_getshdrstrndx
diff -urN libelf-0.8.13.orig/lib/Makefile.w32 libelf-0.8.13/lib/Makefile.w32
--- libelf-0.8.13.orig/lib/Makefile.w32	2009-11-01 05:04:19.000000000 -0800
+++ libelf-0.8.13/lib/Makefile.w32	2016-04-28 13:29:20.777426600 -0700
@@ -36,10 +36,20 @@
 INSTALL_DATA = 
 INSTALL_PROGRAM = 
 
-CFLAGS = /O2 /W2 /TC /MD
+!IF "$(DEBUG)" == ""
+DEBUG=0
+!ENDIF
+
+!IF "$(DEBUG)" == "0"
+CFLAGS = /O2 /W2 /MD /Zi
+TARGETNAME=libelf
+!ELSE
+CFLAGS = /Od /W2 /MDd /Zi /D _DEBUG
+TARGETNAME=libelf-debug
+!ENDIF
 CPPFLAGS = 
 DEFS = /DHAVE_CONFIG_H
-LDFLAGS = 
+LDFLAGS = /DYNAMICBASE /NXCOMPAT /DEBUG
 LIBS = 
 DEPSHLIBS = 
 
@@ -50,9 +60,9 @@
 SONAME_SFX = 
 LINK_SHLIB = $(LD) /DLL $(LDFLAGS)
 
-SHLIB = libelf$(SHLIB_SFX)
-SHLINK = libelf$(SHLINK_SFX)
-SONAME = libelf$(SONAME_SFX)
+SHLIB = $(TARGETNAME)$(SHLIB_SFX)
+SHLINK = $(TARGETNAME)$(SHLINK_SFX)
+SONAME = $(TARGETNAME)$(SONAME_SFX)
 
 # install includes in includedir?
 DO_COMPAT = 
@@ -135,17 +145,20 @@
 
 check:
 
-$(SHLIB): libelf.def $(OBJS) $(LIBOBJS)
+$(SHLIB): $(TARGETNAME).def $(OBJS) $(LIBOBJS)
 	-@$(RM) $(SHLIB)
-	$(LINK_SHLIB) /OUT:"$(SHLIB)" /DEF:"libelf.def" $(OBJS) $(LIBOBJS) kernel32.lib
+	$(LINK_SHLIB) /OUT:"$(SHLIB)" /DEF:"$(TARGETNAME).def" /MANIFEST:EMBED $(OBJS) $(LIBOBJS) kernel32.lib
 
 install:
 
 mostlyclean:
 	-$(RM) *.obj
+	-$(RM) $(TARGETNAME).ilk
 	-$(RM) $(SHLIB)
-	-$(RM) libelf.lib
-	-$(RM) libelf.exp
+	-$(RM) $(TARGETNAME).lib
+	-$(RM) $(TARGETNAME).exp
+	-$(RM) $(TARGETNAME).pdb
+	-$(RM) vc*.pdb
 
 clean: mostlyclean
 
diff -urN libelf-0.8.13.orig/lib/update.c libelf-0.8.13/lib/update.c
--- libelf-0.8.13.orig/lib/update.c	2009-05-22 10:08:09.000000000 -0700
+++ libelf-0.8.13/lib/update.c	2016-04-28 13:35:25.932816400 -0700
@@ -907,25 +907,31 @@
     return 0;
 }
 
+static int
+xftruncate(int fd, off_t length) {
+#if defined(_WIN32)
+    return _chsize_s(fd, length) == 0 ? 0 : -1;
+#elif HAVE_FTRUNCATE
+    return ftruncate(fd, length);
+#else
+    errno = EIO;
+    return -1;
+#endif /* defined(_WIN32) */
+}
+
 static off_t
 _elf_output(Elf *elf, int fd, size_t len, off_t (*_elf_write)(Elf*, char*, size_t)) {
     char *buf;
     off_t err;
 
     elf_assert(len);
-#if HAVE_FTRUNCATE
-    ftruncate(fd, 0);
-#endif /* HAVE_FTRUNCATE */
+    xftruncate(fd, 0);
 #if HAVE_MMAP
     /*
      * Make sure the file is (at least) len bytes long
      */
-#if HAVE_FTRUNCATE
     lseek(fd, (off_t)len, SEEK_SET);
-    if (ftruncate(fd, len)) {
-#else /* HAVE_FTRUNCATE */
-    {
-#endif /* HAVE_FTRUNCATE */
+    if (xftruncate(fd, len)) {
 	if (lseek(fd, (off_t)len - 1, SEEK_SET) != (off_t)len - 1) {
 	    seterr(ERROR_IO_SEEK);
 	    return -1;
